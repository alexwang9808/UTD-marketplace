generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int            @id @default(autoincrement())
  email             String         @unique
  password          String?        // Password hash
  name              String?
  imageUrl          String?        // Profile picture URL
  bio               String?        // User bio
  isVerified        Boolean        @default(false)
  verificationToken String?        @unique
  resetToken        String?        // Password reset token
  resetTokenExpiry  DateTime?      // Reset token expiration
  fcmToken          String?        // Firebase Cloud Messaging token for push notifications
  createdAt         DateTime       @default(now())
  listings          Listing[]
  messages          Message[]
  listingClicks     ListingClick[]
}

model Listing {
  id            Int            @id @default(autoincrement())
  title         String
  description   String?
  price         Float
  imageUrls     String[]       // Listing image URLs (array)
  location      String?        // Add location field
  createdAt     DateTime       @default(now())
  user          User           @relation(fields: [userId], references: [id])
  userId        Int
  messages      Message[]
  listingClicks ListingClick[]
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String?  // Make content optional for image-only messages
  imageUrl   String?  // Add image support
  messageType String  @default("text") // "text", "image", or "system"
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  listing    Listing  @relation(fields: [listingId], references: [id])
  listingId  Int
}

model ListingClick {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  listing   Listing  @relation(fields: [listingId], references: [id])
  listingId Int

  @@unique([userId, listingId]) // Ensure one click per user per listing
}